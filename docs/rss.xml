<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>唐任斌的知识库</title><link>https://tangrenbin.github.io</link><description>生活或者工作中遇到的一些知识点的积累</description><copyright>唐任斌的知识库</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://tangrenbin.github.io</link></image><lastBuildDate>Mon, 05 Aug 2024 03:26:07 +0000</lastBuildDate><managingEditor>唐任斌的知识库</managingEditor><ttl>60</ttl><webMaster>唐任斌的知识库</webMaster><item><title>Python 批量计算两个不同格式时间戳之间的差异</title><link>https://tangrenbin.github.io/post/Python%20-pi-liang-ji-suan-liang-ge-bu-tong-ge-shi-shi-jian-chuo-zhi-jian-de-cha-yi.html</link><description>```python&#13;
from datetime import datetime&#13;
&#13;
# Define the timestamps as strings&#13;
timestamps = [&#13;
    ('20240805 09:51:14:177', '24-8-5  9:51:7'),&#13;
    ('20240805 09:55:31:281', '24-8-5  9:55:25'),&#13;
    ('20240805 10:01:31:451', '24-8-5  10:1:25'),&#13;
    ('20240805 10:01:32:289', '24-8-5  10:1:25'),&#13;
    ('20240805 10:10:31:368', '24-8-5  10:10:25'),&#13;
    ('20240805 10:10:32:310', '24-8-5  10:10:25'),&#13;
    ('20240805 10:16:31:441', '24-8-5  10:16:25'),&#13;
    ('20240805 10:25:31:462', '24-8-5  10:22:35'),&#13;
    ('20240805 10:25:32:368', '24-8-5  10:22:35'),&#13;
    ('20240805 10:28:21:457', '24-8-5  10:25:25'),&#13;
    ('20240805 10:31:21:541', '24-8-5  10:28:25'),&#13;
    ('20240805 10:31:22:504', '24-8-5  10:28:25'),&#13;
    ('20240805 10:43:21:562', '24-8-5  10:40:25'),&#13;
    ('20240805 10:43:22:439', '24-8-5  10:40:25'),&#13;
    ('20240805 10:49:21:690', '24-8-5  10:46:25')&#13;
]&#13;
&#13;
# Parse and calculate differences&#13;
differences = []&#13;
for ts1, ts2 in timestamps:&#13;
    # Parse the timestamps&#13;
    dt1 = datetime.strptime(ts1, '%Y%m%d %H:%M:%S:%f')&#13;
    dt2 = datetime.strptime(ts2.replace(' ', ''), '%y-%m-%d%H:%M:%S')&#13;
    &#13;
    # Calculate the difference&#13;
    diff = dt1 - dt2&#13;
    &#13;
    # Store the difference&#13;
    differences.append(diff.total_seconds())&#13;
&#13;
# Print the differences&#13;
for i, diff in enumerate(differences):&#13;
    print(f'Difference {i+1}: {diff} seconds')&#13;
```&#13;
。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/Python%20-pi-liang-ji-suan-liang-ge-bu-tong-ge-shi-shi-jian-chuo-zhi-jian-de-cha-yi.html</guid><pubDate>Mon, 05 Aug 2024 03:25:41 +0000</pubDate></item><item><title>Linux 常用命令</title><link>https://tangrenbin.github.io/post/Linux%20-chang-yong-ming-ling.html</link><description># 查看当前系统运行时长&#13;
```shell&#13;
uptime -p&#13;
```&#13;
&#13;
# 查看最后一次启动时间&#13;
```shell&#13;
who -b&#13;
```&#13;
&#13;
# 查看重启日期&#13;
```shell&#13;
last -x reboot&#13;
```&#13;
&#13;
# 查看最后 N 次重启日期&#13;
```shell&#13;
last -x reboot | head -n&#13;
```&#13;
&#13;
# 查看关机日期&#13;
```shell&#13;
last -x shutdown&#13;
```&#13;
&#13;
# 查看最后 N 次关机日期&#13;
```shell&#13;
last -x shutdown | head -n&#13;
```&#13;
&#13;
# 创建闹钟任务&#13;
```&#13;
命令：crontab -e&#13;
名称：cron 表达式&#13;
解释：在一个 cron 表达式中，前面的五个字段表示时间参数，分别是分钟、小时、月份中的日期、月份、星期几。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/Linux%20-chang-yong-ming-ling.html</guid><pubDate>Thu, 25 Jul 2024 03:07:43 +0000</pubDate></item><item><title>中国程序员容易发音错误的单词</title><link>https://tangrenbin.github.io/post/zhong-guo-cheng-xu-yuan-rong-yi-fa-yin-cuo-wu-de-dan-ci.html</link><description>[中国程序员容易发音错误的单词](https://fengyuanchen.github.io/chinese-programmer-wrong-pronunciation/)。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/zhong-guo-cheng-xu-yuan-rong-yi-fa-yin-cuo-wu-de-dan-ci.html</guid><pubDate>Wed, 24 Jul 2024 04:23:49 +0000</pubDate></item><item><title>alist-tvbox 服务器配置</title><link>https://tangrenbin.github.io/post/alist-tvbox%20-fu-wu-qi-pei-zhi.html</link><description># 示例&#13;
&#13;
![image](https://github.com/user-attachments/assets/12d8639b-79c9-45cf-a2fa-c0e030ee7cac)&#13;
&#13;
# 协议类型&#13;
```&#13;
WebDAV&#13;
```&#13;
# 主机&#13;
```&#13;
aws.tangrenbin.eu.org（推荐）&#13;
aws1.tangrenbin.eu.org（推荐）&#13;
arm.tangrenbin.link（即将过期）&#13;
aws.tangrenbin.link（即将过期）&#13;
```&#13;
# 端口&#13;
```&#13;
801&#13;
```&#13;
# 用户名&#13;
```&#13;
qianyu&#13;
```&#13;
# 密码&#13;
```&#13;
Qian-yu520&#13;
```&#13;
# 路径&#13;
```&#13;
dav&#13;
```&#13;
&#13;
# alist-tvbox安装&#13;
&#13;
[官方指导文档](https://github.com/power721/alist-tvbox/blob/master/doc/README_zh.md)&#13;
&#13;
## 安装命令&#13;
```shell&#13;
wget https://d.har01d.cn/update_xiaoya.sh -O update_xiaoya.sh &amp;&amp; bash ./update_xiaoya.sh -s /home/alist 800 801&#13;
```&#13;
## 端口说明&#13;
&#13;
-  4567-800 : 管理界面端口&#13;
-  5344-801 : 小雅AList端口（挂载webdav）&#13;
&#13;
。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/alist-tvbox%20-fu-wu-qi-pei-zhi.html</guid><pubDate>Thu, 18 Jul 2024 03:40:52 +0000</pubDate></item><item><title>一键安装docker脚本</title><link>https://tangrenbin.github.io/post/yi-jian-an-zhuang-docker-jiao-ben.html</link><description># 安装&#13;
&#13;
```shell&#13;
curl -fsSL https://get.docker.com | sh &amp;&amp; ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin&#13;
```&#13;
&#13;
# docker 可视化管理面板&#13;
[dockge](https://github.com/louislam/dockge)。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/yi-jian-an-zhuang-docker-jiao-ben.html</guid><pubDate>Thu, 18 Jul 2024 02:29:32 +0000</pubDate></item><item><title>亚马逊云 Ubuntu Vps 开启 root 用户开启 ssh 密码登录踩坑</title><link>https://tangrenbin.github.io/post/ya-ma-xun-yun-%20Ubuntu%20Vps%20-kai-qi-%20root%20-yong-hu-kai-qi-%20ssh%20-mi-ma-deng-lu-cai-keng.html</link><description># ping 不通&#13;
 &#13;
&#13;
1. 新建一个安全组，开启所有流量的出站和入站，特别是要添加一个  ICMP - IPv4&#13;
&#13;
![image](https://github.com/user-attachments/assets/4a33d013-d1d2-4bba-b907-184f42b9d7fc)&#13;
&#13;
![image](https://github.com/user-attachments/assets/5aa110cc-88b0-4df7-b0ad-a89ff139aced)&#13;
&#13;
2. 先申请一个弹性ip然后绑定到实例，然后释放这个ip，达到刷新的目的&#13;
&#13;
# 开启 root 用户开启 ssh 密码登录&#13;
&#13;
&#13;
1. 在控制台登录到终端，**登录之后不要轻易关闭网页，因为可能会导致无法再次进入**&#13;
2. 切换到root用户&#13;
```shell&#13;
sudo -i&#13;
```&#13;
3. 设置 root 用户密码&#13;
```shell&#13;
passwd&#13;
```&#13;
4. 编辑sshd_config配置文件，修改 PermitRootLogin 和 PasswordAuthentication 为 yes&#13;
```shell&#13;
vim /etc/ssh/sshd_config&#13;
```&#13;
5. 查看配置文件是否生效&#13;
```shell&#13;
sshd -T | grep permitrootlogin&#13;
sshd -T | grep passwordauthentication&#13;
```&#13;
6. 如果 passwordauthentication 还是 no , 那就说明还有其他的地方把这个参数配置成了 no ,通过这个命名把那个文件找出来，并且进去这个目录把这个参数改成 yes&#13;
```shell&#13;
grep -i include /etc/ssh/sshd_config&#13;
```&#13;
![image](https://github.com/user-attachments/assets/8d5d6e0a-2e78-49cc-aa7d-ab3c889e6d28)&#13;
&#13;
7. 重启 SSH 服务来应用更改&#13;
```shell&#13;
systemctl restart ssh&#13;
```&#13;
8. 再次验证配置是否正确&#13;
```shell&#13;
sshd -T | grep passwordauthentication&#13;
```&#13;
![image](https://github.com/user-attachments/assets/5459b805-d926-42f8-a8ba-1d5892aa24a6)&#13;
&#13;
&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/ya-ma-xun-yun-%20Ubuntu%20Vps%20-kai-qi-%20root%20-yong-hu-kai-qi-%20ssh%20-mi-ma-deng-lu-cai-keng.html</guid><pubDate>Wed, 17 Jul 2024 08:33:28 +0000</pubDate></item><item><title>一些待办</title><link>https://tangrenbin.github.io/post/yi-xie-dai-ban.html</link><description>- [ ] 手撕链表
- [ ] 手撕哈希表
- [ ] 双指针
- [ ] 哈夫曼编码压缩与解压
- [ ] FreeRtos从入门到放弃
- [ ] μcos从入门到放弃
- [ ] RTthread从入门到放弃
- [ ] Linux内核从入门到放弃
。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/yi-xie-dai-ban.html</guid><pubDate>Tue, 16 Jul 2024 12:34:50 +0000</pubDate></item><item><title>取余操作性能优化</title><link>https://tangrenbin.github.io/post/qu-yu-cao-zuo-xing-neng-you-hua.html</link><description>一个数&amp;(2&lt;sup&gt;n&lt;/sup&gt;-1)等价于它对2&lt;sup&gt;n&lt;/sup&gt;取余&#13;
&#13;
# 原理&#13;
保留后n个bit&#13;
&#13;
# 优化点&#13;
位运算更快。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/qu-yu-cao-zuo-xing-neng-you-hua.html</guid><pubDate>Sun, 14 Jul 2024 01:53:01 +0000</pubDate></item><item><title>C语言命令手册</title><link>https://tangrenbin.github.io/post/C-yu-yan-ming-ling-shou-ce.html</link><description>```shell
man 2 open
man 3 printf
```
2是系统调用
3是c标准库。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/C-yu-yan-ming-ling-shou-ce.html</guid><pubDate>Sun, 14 Jul 2024 01:34:03 +0000</pubDate></item><item><title>达夫设备</title><link>https://tangrenbin.github.io/post/da-fu-she-bei.html</link><description># 核心思想&#13;
&#13;
循环之前先计算一下是否需要判断，而不是类似for，循环一次判断一次&#13;
&#13;
但是现代的编译器已经可以通过循环展开的方式优化了循环&#13;
&#13;
```C&#13;
void duff_device(char *to, char *from, int count)&#13;
{&#13;
    int n = (count + 7) / 8;&#13;
&#13;
    switch (count % 8)&#13;
    {&#13;
    case 0:&#13;
        do&#13;
        {&#13;
            *to++ = *from++;&#13;
        case 7:&#13;
            *to++ = *from++;&#13;
        case 6:&#13;
            *to++ = *from++;&#13;
        case 5:&#13;
            *to++ = *from++;&#13;
        case 4:&#13;
            *to++ = *from++;&#13;
        case 3:&#13;
            *to++ = *from++;&#13;
        case 2:&#13;
            *to++ = *from++;&#13;
        case 1:&#13;
            *to++ = *from++;&#13;
        } while (--n &gt; 0);&#13;
    }&#13;
}&#13;
```&#13;
&#13;
[这篇博客有详细解释](https://www.cnblogs.com/yffq/p/4558696.html)。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/da-fu-she-bei.html</guid><pubDate>Thu, 11 Jul 2024 03:47:01 +0000</pubDate></item><item><title> 取消全部打印并不编译</title><link>https://tangrenbin.github.io/post/%20-qu-xiao-quan-bu-da-yin-bing-bu-bian-yi.html</link><description>```C&#13;
#define app_printf(fmt, arg...)   ({ (void)0; }) //适用于更复杂的语法，例如三元运算符&#13;
#define app_printf(...)&#13;
```。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/%20-qu-xiao-quan-bu-da-yin-bing-bu-bian-yi.html</guid><pubDate>Thu, 11 Jul 2024 02:42:33 +0000</pubDate></item><item><title>GCC 取消定义但未使用变量警告</title><link>https://tangrenbin.github.io/post/GCC%20-qu-xiao-ding-yi-dan-wei-shi-yong-bian-liang-jing-gao.html</link><description>```GCC&#13;
-Wno-unused-variable -Wno-unused-but-set-variable&#13;
```。</description><guid isPermaLink="true">https://tangrenbin.github.io/post/GCC%20-qu-xiao-ding-yi-dan-wei-shi-yong-bian-liang-jing-gao.html</guid><pubDate>Thu, 11 Jul 2024 02:17:16 +0000</pubDate></item></channel></rss>